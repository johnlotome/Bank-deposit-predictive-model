# -*- coding: utf-8 -*-
"""Exploratory data analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bstCpEMYPPb4SlK6rk8UW1FIJgMj5T0n
"""

# Commented out IPython magic to ensure Python compatibility.
# %load_ext autoreload
# %autoreload 2

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

# %matplotlib inline

path = "../data/raw/bank-additional-full.csv"
df = pd.read_csv(path, sep= ';')

df.head()

df.dtypes

df.info()

df.describe()

df.hist(bins= 10, figsize=(14, 10))
plt.show()

df.rename(columns={'y':'deposit'}, inplace=True)
monthly_sub = pd.crosstab(df['month'], df['deposit']).apply(lambda x: x/x.sum() * 100)
monthly_sub.sort_values(by='yes', ascending=False)

f,ax=plt.subplots(1,2, figsize=(14,6))
labels = 'Declined', 'Accepted'
df['deposit'].value_counts().plot.pie(explode=[0,0.1],autopct='%1.1f%%',ax=ax[0],shadow=True,labels=labels,fontsize=14)
ax[0].set_title('Term Deposits', fontsize=20)
ax[0].set_ylabel('Total Clients', fontsize=14)
sns.countplot('deposit',data=df,ax=ax[1])
ax[1].set_title('Term Deposits', fontsize=20)
ax[1].set_xticklabels(['Declined', 'Accepted'], fontsize=12)
plt.show()

sns.relplot(x="age", y="duration", height= 8, aspect=1, hue="job", data=df)
plt.show()

sns.relplot(x="age", y="duration", height= 8, aspect=1, hue="marital", col="deposit", data=df)
plt.show()

X = df.deposit.value_counts()
X

sns.countplot(x="education", data=df)
plt.xticks(rotation = 40)
plt.show()

f, axes = plt.subplots(ncols=2, figsize=(15, 6))

sns.distplot(df['age'], kde=False, ax=axes[0]).set_title('Age Distribution')
axes[0].set_ylabel('Number of Potential Subscribers')


sns.distplot(df['campaign'], kde=False, ax=axes[1]).set_title('Contacts distribution in the Marketing Campaign')
axes[1].set_ylabel('Number of Potential Subscribers')

plt.show()

corr = df.corr()

sns.heatmap(corr,annot=True,cmap='RdYlGn',linewidths=0.2,annot_kws={'size':20})
fig=plt.gcf()
fig.set_size_inches(18,15)
plt.xticks(fontsize=14)
plt.yticks(fontsize=14)
plt.show()